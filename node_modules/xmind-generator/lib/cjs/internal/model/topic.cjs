"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Topic = void 0;
var _common = require("../common.cjs");
var _summary = require("./summary.cjs");
class Topic {
  id;
  ref;
  title;
  _children;
  _summaries;
  _markers;
  _labels;
  _image;
  _note;
  constructor(title, attributes, children) {
    this.id = (0, _common.uuid)();
    this.title = title;
    this._children = children ?? [];
    this._summaries = [];
    this._image = null;
    this.ref = attributes?.ref ?? null;
    this._labels = attributes?.labels ?? [];
    this._markers = attributes?.markers ?? [];
    this._note = attributes?.note ?? null;
  }
  get children() {
    return this._children;
  }
  get summaries() {
    return this._summaries;
  }
  get labels() {
    return this._labels;
  }
  get note() {
    return this._note;
  }
  set note(newNote) {
    if (newNote) {
      this._note = newNote.trim();
    }
  }
  get markers() {
    return this._markers;
  }
  get image() {
    return this._image;
  }
  query(identifier) {
    if (identifier === this.id || identifier === this.ref) {
      return this;
    } else {
      return this._children.find(child => child.query(identifier) !== null) ?? null;
    }
  }
  addTopic(title, attributes) {
    const childTopic = new Topic(title, attributes);
    this._children.push(childTopic);
    return childTopic;
  }
  addLabel(label) {
    if (!this._labels.includes(label)) {
      this._labels.push(label);
    }
  }
  addImage(imageData) {
    this._image = imageData;
  }
  addMarker(markerId) {
    if (this._markers.find(id => id.isSameGroup(markerId))) {
      throw new Error("Marker creation with same group is not allowed");
    }
    this._markers.push(markerId);
  }
  addSummary(title, from, to, summaryTopic) {
    const summaryToAdd = new _summary.Summary(title, from, to, summaryTopic);
    if (this._summaries.find(summary => summary.isConflictWith(summaryToAdd))) {
      return null;
    }
    this._summaries.push(summaryToAdd);
    return summaryToAdd;
  }
}
exports.Topic = Topic;